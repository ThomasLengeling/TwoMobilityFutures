#include <Arduino.h>
#include <jled.h>
bool startProcess = false;

enum lightMode { ON = 1, OFF, BREATH, FLICKER, STROBE, RANDOM_STROBE, FADE_ON, FADE_OFF, FADE_ON_SEQ, FADE_OFF_SEQ };
char* handshakeMessage = "s";
lightMode currentMode = OFF;
const int LED_COUNT = 16;
// int pins[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
int opins[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 30, 23, 22, 21, 20};
//int pins[] = {30, 4, 5, 15, 6, 7, 8, 9, 10, 29, 30, 23, 22, 21, 20};
//int pins[] = {10, 6, 5, 15, 6, 7, 8, 9, 10, 29, 30, 23, 22, 21, 20};
//int pins[] = {10,6,4,8,3,21,7,29,2,9,10,0,9,23,5};
//int pins[] = {10, 6, 4, 20, 29, 21, 7};


// 11, 13, 15 not turning on
int pins[] = {opins[8],opins[4],opins[1],opins[14],opins[9],opins[6],opins[3],opins[12],opins[10],opins[7],opins[2],opins[13],opins[11],opins[14]};
//int pins[] = {opins[13],opins[11],opins[5]};
JLed led1 = JLed(pins[0]);
JLed led2 = JLed(pins[1]);
JLed led3 = JLed(pins[2]);
JLed led4 = JLed(pins[3]);
JLed led5 = JLed(pins[4]);
JLed led6 = JLed(pins[5]);
JLed led7 = JLed(pins[6]);
JLed led8 = JLed(pins[7]);
JLed led9 = JLed(pins[8]);
JLed led10 = JLed(pins[9]);
JLed led11 = JLed(pins[10]);
JLed led12 = JLed(pins[11]);
JLed led13 = JLed(pins[12]);
JLed led14 = JLed(pins[13]);
JLed led15 = JLed(pins[14]);
JLed led16 = JLed(pins[15]);

JLed leds[] = {led1, led2, led3, led4, led5, led6, led7, led8, led9, led10, led11, led12, led13, led14, led15, led16};

auto sequence = JLedSequence(JLedSequence::eMode::PARALLEL, leds);

/*
  LED Effects
*/

void startOn(bool isSequential = false) {
    if (isSequential) {
        int delay = 500;
        for (int i = 0; i < LED_COUNT; i++) {
            int ledDelay = delay * i;
            leds[i].On().DelayBefore(ledDelay);
        }
    } else {
        for (int i = 0; i < LED_COUNT; i++) {
            leds[i].On();
        }
    }
}

void startOff(bool isSequential = false) {
    if (isSequential) {
        int delay = 1000;
        for (int i = 0; i < LED_COUNT; i++) {
            int ledDelay = delay * i;
            leds[i].Off().DelayBefore(ledDelay);
        }
    } else {
        for (int i = 0; i < LED_COUNT; i++) {
            leds[i].Off();
        }
    }
}

void startBreath() {
    for (int i = 0; i < LED_COUNT; i++) {
        leds[i].Breathe(5000).Forever();
    }
}

void startFlicker() {
    for (int i = 0; i < LED_COUNT; i++) {
        leds[i].Candle(5, 255, 1000).Forever().DelayAfter(4000);
    }
}

void startStrobe() {
    for (int i = 0; i < LED_COUNT; i++) {
        leds[i].Blink(50, 50).Forever();
    }
}

void startRandomStrobe() {
    for (int i = 0; i < LED_COUNT; i++) {
        long ledOn = random(0, 2);
        Serial.println(ledOn);
        if (ledOn == 1)
            leds[i].On().Forever();
        else
            leds[i].Off().Forever();
    }
}

void startFadeOn(bool isSequential = false, int speed = 400) {
    if (isSequential) {
        int delay = 200;
        for (int i = 0; i < LED_COUNT; i++) {
            int ledDelay = delay * i;
            leds[i].FadeOn(speed).DelayBefore(ledDelay);
        }
    } else {
        for (int i = 0; i < LED_COUNT; i++) {
            leds[i].FadeOn(speed);
        }
    }
}

void startFadeOff(bool isSequential = false, int speed = 1000) {
    if (isSequential) {
        int delay = 500;
        for (int i = 0; i < LED_COUNT; i++) {
            int ledDelay = delay * i;
            leds[i].FadeOff(speed).DelayBefore(ledDelay);
        }
    } else {
        for (int i = 0; i < LED_COUNT; i++) {
            leds[i].FadeOff(speed);
        }
    }
}

void setup() {
    Serial.begin(9600);
    for (int i = 0; i < LED_COUNT; i++) {
        pinMode(pins[i], OUTPUT);
    }
}

void stop(){
  for (int i = 0; i < LED_COUNT; i++) {
        leds[i].Stop();
    }
}

// void loop() {
//     char incomingByte = Serial.read();
//     Serial.println(incomingByte);

//     if (incomingByte == handshakeMessage) {
//         Serial.write("s");
//     }

//     switch (incomingByte) {
//         case ON:
//           stop();
//             currentMode = ON;
//             Serial.write("on");
//             startOn();
//             break;
//         case OFF:
//         stop();
//             currentMode = OFF;
//             Serial.write("off");
//             startOff();
//             break;
//         case BREATH:
//         stop();
//             currentMode = BREATH;
//             Serial.write("breathe");
//             startBreath();
//             break;
//         case FLICKER:
//         stop();
//             currentMode = FLICKER;
//             Serial.write("flicker");
//             startFlicker();
//             break;
//         case STROBE:
//         stop();
//             currentMode = STROBE;
//             Serial.write("strobe");
//             startStrobe();
//             break;
//         case RANDOM_STROBE:
//         stop();
//             currentMode = RANDOM_STROBE;
//             Serial.write("random strobe");
//             startRandomStrobe();
//             break;
//         case FADE_ON:
//         stop();
//             currentMode = FADE_ON;
//             Serial.write("fade on");
//             startFadeOn();
//             break;
//         case FADE_OFF:
//         stop();
//             currentMode = FADE_OFF;
//             Serial.write("fade off");
//             startFadeOff();
//             break;
//         case FADE_ON_SEQ:
//         stop();
//             currentMode = FADE_ON_SEQ;
//             Serial.write("fade on seq");
//             startFadeOn(true);
//             break;
//         case FADE_OFF_SEQ:
//         stop();
//             currentMode = FADE_OFF_SEQ;
//             Serial.write("fade off seq");
//             startFadeOff(true);
//             break;
//     }

//     // if (currentMode == RANDOM_STROBE) {
//     //     startRandomStrobe();
//     // } else {
//     // send interupt on chnage
//     for (int i = 0; i < LED_COUNT; i++) {
//         leds[i].Update();
//     }
//     // }
// }


void loop() {
    String command = Serial.readString();
    Serial.println(command);
    if (command == "s") {
        Serial.write("s");
    }
    if (command == ON) {
        currentMode = ON;
        Serial.write("on");
        startOn();
    }
    if (command == OFF) {
        currentMode = OFF;
        Serial.write("off");
        startOff();
    }
    if (command == BREATH) {
        currentMode = BREATH;
        Serial.write("breathe");
        startBreath();
    }
    if (command == FLICKER) {
        currentMode = FLICKER;
        Serial.write("flicker");
        startFlicker();
    }
    if (command == STROBE) {
        currentMode = STROBE;
        Serial.write("strobe");
        startStrobe();
    }
    if (command == RANDOM_STROBE) {
        currentMode = RANDOM_STROBE;
        Serial.write("random strobe");
        startRandomStrobe();
    }

    // send interupt on chnage
    for (int i = 0; i < LED_COUNT; i++) {
        leds[i].Update();
    }
}